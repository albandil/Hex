#!/bin/bash

if [[ "$1" == "" ]]
then
    echo "Usage:"
    echo "    ./analyze-pwba2-log <logfile>"
    exit 0
fi

if [[ ! -f "$1" ]]
then
    echo "No log file \"$1\"."
    exit 1
fi

export LC_NUMERIC=en_GB.utf8

sections=$(cat $1 | grep -n "^li =" | cut -f1 -d:)
Nsections=$(echo "$sections" | wc -l)

DIR="$1-data"
mkdir -p $DIR
rm -f $DIR/summary

for i in $(seq 1 $Nsections)
do
    begin=$(echo $sections | awk "{ print \$$i }")
    end=$(($(echo $sections | awk "{ print \$$(($i+1)) }")-1))
    
    if [[ $i == $Nsections ]]
    then
        subset=$(cat $1 | tail -n +$begin)
    else
        subset=$(cat $1 | head -$end | tail -n +$begin)
    fi
    
    echo "i = $i : lines $begin ... $end" | tee -a $DIR/summary
    echo "$subset" | head -1 >> $DIR/summary
    
    rm -f $DIR/$i-bound.log
    rm -f $DIR/$i-allowed*.log
    rm -f $DIR/$i-forbidden.log
    
    isubs=1
    echo "$subset" | grep transfer | sed "s/\(.*\)\(transfer \[.*\]\)\(.*\)/\2/g" | sort | uniq | while read line
    do
        bound_begin=$(echo "$subset" | grep -n "Bound intermediate states" | cut -f1 -d:)
        allowed_begin=$(echo "$subset" | grep -n "Allowed intermediate states" | cut -f1 -d:)
        forbidden_begin=$(echo "$subset" | grep -n "Forbidden intermediate states" | cut -f1 -d:)
        
#         echo "$bound_begin $allowed_begin $forbidden_begin"
        
        if [ "$allowed_begin" ]
        then
            bound_subset=$(echo "$subset" | head -$allowed_begin | tail -n +$bound_begin | grep -F "$line")
            if [ "$forbidden_begin" ]
            then
                allowed_subset=$(echo "$subset" | head -$forbidden_begin | tail -n +$allowed_begin | grep -F "$line")
                forbidden_subset=$(echo "$subset" | tail -n +$forbidden_begin | grep -F "$line")
            else
                allowed_subset=$(echo "$subset" | tail -n +$allowed_begin | grep -F "$line")
                forbidden_subset=""
            fi
        else
            bound_subset=$(echo "$subset" | tail -n +$bound_begin | grep -F "$line")
            allowed_subset=""
        fi
        
#        echo "$bound_subset"
        
        echo "$bound_subset"     | grep transfer             | sed "s/[(,)]/ /g" | awk '{ print -1/($10*$10), $20, $21 }' | sort -g | uniq >> $DIR/$i-bound.log
        echo "$allowed_subset"   | grep transfer | grep real | sed "s/[(,)]/ /g" | awk '{ print $10, $21 }'               | sort -g | uniq >> $DIR/$i-allowed-real.log
        echo "$allowed_subset"   | grep transfer | grep imag | sed "s/[(,)]/ /g" | awk '{ print $10, $21 }'               | sort -g | uniq >> $DIR/$i-allowed-imag.log
        echo "$forbidden_subset" | grep transfer             | sed "s/[(,)]/ /g" | awk '{ print $10, $20 }'               | sort -g | uniq >> $DIR/$i-forbidden.log
        
        echo >> $DIR/$i-bound.log
        echo >> $DIR/$i-allowed-real.log
        echo >> $DIR/$i-allowed-imag.log
        echo >> $DIR/$i-forbidden.log
    done
done

rm -f "$1-plot.gp"

#
# Header
#

cat >> "$1-plot.gp" <<EOF
#!/usr/bin/gnuplot

if (GPVAL_VERSION < 5) print "Warning: This script has been tested on Gnuplot 5.0"

maxL = $Nsections

set multiplot title "PWBA2 - T-matrix contributions from intermediate states" font ",12"

unset rmargin
unset key

set grid
set border
set tics
set tmargin 5

EOF

#
# Real bound states
#

if [[ $(cat $DIR/*-bound.log | grep -v ^$ | wc -c) -gt 0 ]]; then
cat >> "$1-plot.gp" <<EOF
set title "Re T - bound"
set xlabel "E [Ry]"
set ylabel "T-matrix contribution [at.u.]"
set origin 0,0.5
set size 0.333,0.5
plot [:0] for [i=1:maxL] \\
    sprintf("$DIR/%d-bound.log",i) \\
    using 1:2 with linespoints pointtype 7 pointsize 1

EOF
fi # bound

#
# Real continuum states (allowed and forbidden)
#

if [[ $(cat $DIR/*-allowed*.log | grep -v ^$ | wc -c) -gt 0 ]]; then
if [[ $(cat $DIR/*-forbidden.log | grep -v ^$ | wc -c) -gt 0 ]]; then
# allowed and forbidden
cat >> "$1-plot.gp" <<EOF
set rmargin 0
set title "Re T - allowed"
set xlabel "E [Ry]"
set ylabel "T-matrix contribution [at.u.]"
set origin 0.333,0.5
set size 0.333,0.5
set autoscale xfix
plot [0:] for [i=1:maxL] \\
    sprintf("$DIR/%d-allowed-real.log",i) \\
    using (\$1):(0.5*\$1*\$1*\$2) with lines

Xmin = GPVAL_X_MIN
Xmax = GPVAL_X_MAX
Ymin = GPVAL_Y_MIN
Ymax = GPVAL_Y_MAX

set title "Re T - forbidden"
set xlabel "E [Ry] (compactified)"
unset ylabel
set origin 0.666,0.5
set size 0.333,0.5
unset rmargin
set lmargin 0
unset ytics
set y2tics mirror
set grid y2
set xtics (sprintf("%g",Xmax) -1, sprintf("%g",Xmax + 1) 0, "∞" 1) left
plot [-1:1] [Ymin:Ymax] for [i=1:maxL] \\
    sprintf("$DIR/%d-forbidden.log",i) \\
    using ((\$1-Xmax-1)/(\$1-Xmax+1)):(\$1*\$1*\$2/(\$1-Xmax+1)**2) with lines
#   using ((\$1-Xmax-1)/(\$1-Xmax+1)):(0.5*\$1*\$1*\$2) with lines
set xtics autofreq
set ytics
unset y2tics
unset lmargin

EOF
else
# allowed and not forbidden
cat >> "$1-plot.gp" <<EOF
set title "Re T - allowed"
set xlabel "E [Ry]"
set ylabel "T-matrix contribution [at.u.]"
set origin 0.333,0.5
set size 0.333,0.5
set autoscale xfix
plot for [i=1:maxL] \\
    sprintf("$DIR/%d-allowed-real.log",i) \\
    using (\$1):(0.5*\$1*\$1*\$2) with lines

EOF
fi
else
# not allowed and forbidden
if [[ $(cat $DIR/*-forbidden.log | grep -v ^$ | wc -c) -gt 0 ]]; then
cat >> "$1-plot.gp" <<EOF
set title "Re T - forbidden"
set xlabel "E [Ry]"
set ylabel "T-matrix contribution [at.u.]"
set origin 0.333,0
set size 0.666,1
set xtics ("0" -1, "1" 0, "∞" 1)
plot [-1:1] [:] for [i=1:maxL] \\
    sprintf("$DIR/%d-forbidden.log",i) \\
    using ((\$1-1)/(\$1+1)):(0.5*\$1*\$1*\$2) with lines
set xtics autofreq

EOF
fi
fi

#
# Imag bound states
#

if [[ $(cat $DIR/*-bound.log | grep -v ^$ | wc -c) -gt 0 ]]; then
cat >> "$1-plot.gp" <<EOF
unset tmargin
set title "Im T - bound"
set xlabel "E [Ry]"
set ylabel "T-matrix contribution [at.u.]"
set origin 0,0
set size 0.333,0.5
plot [:0] for [i=1:maxL] \\
    sprintf("$DIR/%d-bound.log",i) \\
    using (\$1):(\$1 < 0 ? \$3 : 0.5*\$1*\$1*\$3) with linespoints pointtype 7 pointsize 1

EOF
fi # bound

#
# Imag continuum states (allowed only)
#

if [[ $(cat $DIR/*-allowed*.log | grep -v ^$ | wc -c) -gt 0 ]]; then
if [[ $(cat $DIR/*-forbidden.log | grep -v ^$ | wc -c) -gt 0 ]]; then
cat >> "$1-plot.gp" <<EOF
set rmargin 0
EOF
fi
cat >> "$1-plot.gp" <<EOF
unset tmargin
set title "Im T - allowed"
set xlabel "E [Ry]"
set ylabel "T-matrix contribution [at.u.]"
set origin 0.333,0
set size 0.333,0.5
set autoscale xfix
plot [0:] for [i=1:maxL] \\
    sprintf("$DIR/%d-allowed-imag.log",i) \\
    using (\$1):(0.5*\$1*\$1*\$2) with lines

EOF
fi # allowed

cat >> "$1-plot.gp" <<EOF
unset tmargin
unset title
unset xlabel
unset ylabel
unset border
unset grid
unset tics
set origin 0.666,0
set size 0.333,0.5
set key inside center box width 2 heigh 1
plot [0:1] [0:1] for [i=1:maxL] 10 title sprintf("%d",i)

unset multiplot
EOF
