
        / /   / /    __    \ \  / /
       / /__ / /   / _ \    \ \/ /
      /  ___  /   | |/_/    / /\ \
     / /   / /    \_\      / /  \ \

                 HEX-DB

------------
Dependencies
------------

The program is written in C++11 and can be successfully compiled by the
following compilers:

 * GCC 4.8.1
 * Intel C++ Composer XE 15.0 (tested with GCC 4.8.1 headers)
 
There are several external libraries that are being used for some partial tasks.
Here is the list of the libraries with versions that were used:

 * GSL 1.16
            Obtainable from
                http://www.gnu.org/software/gsl/
            Used for special functions and some others.

 * FFTW 3.3.4
            Obtainable from
                http://www.fftw.org/download.html
            Used for Chebyshev expansion and Gauss-Chebyshev quadrature.

 * SQLite 3.8.3
            Obtainable from
                http://www.sqlite.org/download.html
            Used for access to the database files.

Some or all of the libraries may be present in precompiled form in the repositories
of the Linux distribution used.

-------------
Build and run
-------------

Once the needed libraries are present in the system include and library paths,
all that is necessary to build the program is running "make" from this directory.

> make

This should create an executable "hex-db" in the subdirectory "bin/". One can
then create an empty database by the command

> bin/hex-db --new

The tables present in the new database can be listed using "sqlite3" program,

> sqlite3 hex.db .tables    # prints "ccs ics ionf tmat"

The SQL statements used to create the tables can be retrieved similarly,

> sqlite3 hex.db .schema

As soon as there are some data to import, one will run

> bin/hex-db --import <SQL_batch_file> --update

If the external libraries are installed in non-standard locations, one needs to
edit the Makefile accordingly.

The HTML documentation can be extracted from the code by the program Doxygen:

> doxygen

-------------------
Building on Windows
-------------------

The program has been successfully tested on Windows 10 TP (64bit). The compilation
has been done in the Code::Blocks IDE (the project file *.cbp is included with
the source code). It is necessary to install a full-featured MinGW-w64 compiler, though;
the compiler bundled with Code::Blocks lacks necessary features.

1) Download MinGW installer from SourceForge:
http://sourceforge.net/projects/mingw/files/Installer/mingw-get-setup.exe/download

2) Install C++ and Fortran compilers, OpenMP and Posix threads implementations.

3) Download and install latest Code::Blocks (tested version was 13.12).

4) In Code::Blocks IDE, set the full MinGW installation as the compiler to use,
   possibly manually ("Compiler executables...").

5) Build all necessary third-party libraries. This is most difficult. Alternatively,
   the compiled binaries together with header files and import libraries can be
   downloaded from the Hex's SourceForge page.
   